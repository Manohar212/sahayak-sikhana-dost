
import React from 'react';
import { Button } from '@/components/ui/button';
import { Download, FileText, Share2 } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface ContentDownloaderProps {
  content: string;
  filename: string;
  type: 'story' | 'worksheet' | 'qa' | 'lesson' | 'visual';
}

const ContentDownloader = ({ content, filename, type }: ContentDownloaderProps) => {
  const { toast } = useToast();

  const downloadAsText = () => {
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${filename}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    toast({
      title: "Downloaded! 📥",
      description: `${filename}.txt has been downloaded`,
    });
  };

  const downloadAsPDF = () => {
    // Create a printable HTML version
    const printWindow = window.open('', '_blank');
    if (printWindow) {
      printWindow.document.write(`
        <html>
          <head>
            <title>${filename}</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }
              .header { border-bottom: 2px solid #333; padding-bottom: 10px; margin-bottom: 20px; }
              .content { white-space: pre-line; }
            </style>
          </head>
          <body>
            <div class="header">
              <h1>${filename}</h1>
              <p>Generated by Sahayak AI</p>
            </div>
            <div class="content">${content}</div>
          </body>
        </html>
      `);
      printWindow.document.close();
      printWindow.print();
    }
    
    toast({
      title: "Ready to Print! 🖨️",
      description: "Print dialog opened for PDF creation",
    });
  };

  const shareContent = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: filename,
          text: content,
        });
        toast({
          title: "Shared! 📤",
          description: "Content shared successfully",
        });
      } catch (error) {
        console.error('Error sharing:', error);
      }
    } else {
      // Fallback: copy to clipboard
      navigator.clipboard.writeText(content);
      toast({
        title: "Copied! 📋",
        description: "Content copied to clipboard",
      });
    }
  };

  return (
    <div className="flex flex-wrap gap-2 mt-4">
      <Button 
        variant="outline" 
        size="sm" 
        onClick={downloadAsText}
        className="text-gray-700 dark:text-gray-300 border-gray-300 dark:border-gray-600"
      >
        <Download className="h-4 w-4 mr-1" />
        Download TXT
      </Button>
      <Button 
        variant="outline" 
        size="sm" 
        onClick={downloadAsPDF}
        className="text-gray-700 dark:text-gray-300 border-gray-300 dark:border-gray-600"
      >
        <FileText className="h-4 w-4 mr-1" />
        Print/PDF
      </Button>
      <Button 
        variant="outline" 
        size="sm" 
        onClick={shareContent}
        className="text-gray-700 dark:text-gray-300 border-gray-300 dark:border-gray-600"
      >
        <Share2 className="h-4 w-4 mr-1" />
        Share
      </Button>
    </div>
  );
};

export default ContentDownloader;
