
import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { useToast } from '@/hooks/use-toast';
import APIKeyInput from './APIKeyInput';

const VisualAidCreator = () => {
  const [concept, setConcept] = useState('');
  const [generatedDrawing, setGeneratedDrawing] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [isApiKeySet, setIsApiKeySet] = useState(false);
  const { toast } = useToast();

  const handleGenerate = async () => {
    if (!concept.trim()) return;
    
    setIsGenerating(true);
    
    // Simulate generation for now - this would use Gemini for text-to-image or detailed drawing descriptions
    setTimeout(() => {
      const drawingDescription = `ЁЯУР Simple Drawing Instructions for: ${concept}

ЁЯОп Materials needed:
- Chalk/Marker
- Blackboard/Whiteboard
- Scale/Ruler

ЁЯУЭ Step-by-step drawing guide:

1. Start with basic shapes
   тАв Draw a large circle in the center
   тАв Add smaller circles around it

2. Add details
   тАв Draw simple lines connecting the shapes
   тАв Add labels in both Hindi and English

3. Final touches
   тАв Use different colors if available
   тАв Make text large enough for all students to see

ЁЯТб Teaching tip: Draw this step-by-step with students, explaining each part as you go!`;

      setGeneratedDrawing(drawingDescription);
      setIsGenerating(false);
      toast({
        title: "Drawing Guide Ready! ЁЯОи",
        description: "Visual aid instructions created!",
      });
    }, 2000);
  };

  if (!isApiKeySet) {
    return <APIKeyInput onKeySet={setIsApiKeySet} />;
  }

  return (
    <div className="space-y-6">
      <Card className="bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2 text-purple-800">
            <span>ЁЯОи</span>
            <span>Visual Aid Creator</span>
          </CardTitle>
          <CardDescription className="text-purple-600">
            рдмреНрд▓реИрдХрдмреЛрд░реНрдб рдХреЗ рд▓рд┐рдП рд╕рд░рд▓ рдЪрд┐рддреНрд░ рдмрдирд╛рдПрдВ тАв Create simple drawings for blackboard teaching
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-purple-800 mb-2">
              рдХреЙрдиреНрд╕реЗрдкреНрдЯ рдмрддрд╛рдПрдВ тАв Describe the Concept
            </label>
            <Textarea
              value={concept}
              onChange={(e) => setConcept(e.target.value)}
              placeholder="рдЙрджрд╛рд╣рд░рдг: рдлреЛрдЯреЛрд╕рд┐рдВрдереЗрд╕рд┐рд╕, рд╕реМрд░ рдордВрдбрд▓, рд╣реГрджрдп... / Example: Photosynthesis, Solar System, Heart..."
              className="bg-white border-purple-200 min-h-[100px]"
            />
          </div>
          
          <Button 
            onClick={handleGenerate}
            disabled={!concept.trim() || isGenerating}
            className="w-full bg-purple-500 hover:bg-purple-600 text-white transition-colors"
          >
            {isGenerating ? 'ЁЯОи рдЪрд┐рддреНрд░ рдмрди рд░рд╣рд╛ рд╣реИ... Creating Drawing...' : 'тЬПя╕П Drawing Guide рдмрдирд╛рдПрдВ тАв Create Drawing Guide'}
          </Button>
        </CardContent>
      </Card>

      {generatedDrawing && (
        <Card className="bg-white border-purple-200 shadow-lg">
          <CardHeader>
            <CardTitle className="text-purple-800 flex items-center space-x-2">
              <span>ЁЯУР</span>
              <span>Drawing Instructions тАв рдЪрд┐рддреНрд░ рдмрдирд╛рдиреЗ рдХреЗ рдирд┐рд░реНрджреЗрд╢</span>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="whitespace-pre-line text-gray-700 leading-relaxed">
              {generatedDrawing}
            </div>
            <div className="mt-4 flex space-x-2">
              <Button variant="outline" size="sm" className="text-purple-700 border-purple-300">
                ЁЯУЛ Copy / рдХреЙрдкреА рдХрд░реЗрдВ
              </Button>
              <Button variant="outline" size="sm" className="text-purple-700 border-purple-300">
                ЁЯЦия╕П Print / рдкреНрд░рд┐рдВрдЯ рдХрд░реЗрдВ
              </Button>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
};

export default VisualAidCreator;
